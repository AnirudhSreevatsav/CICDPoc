name: Build and Deploy Docker Image to EC2

on:
  push:
    branches:
      - main  # Change this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t your-image-name:latest .

      # Step 5: Save the Docker image to a tarball
      - name: Save Docker image to a tarball
        run: |
          docker save your-image-name:latest | gzip > docker_image.tar.gz

      # Step 6: Copy the tarball to EC2 using SCP
      - name: Copy Docker image to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}  # For Amazon Linux, it's usually "ec2-user"
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./docker_image.tar.gz
          target: /home/${{ secrets.EC2_USER }}/docker_image.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 7: SSH into EC2 and load the Docker image
      - name: SSH into EC2 and load Docker image
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker load -i /home/${{ secrets.EC2_USER }}/docker_image.tar.gz
            docker run -d -p 8080:8080 your-image-name:latest
